#include "../include/Game.h"
#include <iostream>

// üîß –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –∏ –Ω–∞—á–∞–ª—å–Ω—É—é —Ñ–∞–∑—É –∏–≥—Ä—ã
Game::Game(const std::string& player1, const std::string& player2)
    : currentPlayerIndex(0), phase(GamePhase::Setup) {
    players[0].name = player1;
    players[1].name = player2;
}

// üéÆ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞
void Game::playerTurn(int x, int y) {
    // üß± –ï—Å–ª–∏ –∏–≥—Ä–∞ –≤ —Ñ–∞–∑–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Äî –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∏–≥—Ä–µ
    if (phase == GamePhase::Setup) {
        std::cout << "–†–∞–∑–º–µ—â–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ù–∞—á–∏–Ω–∞–µ–º –∏–≥—Ä—É!\n";
        phase = GamePhase::InProgress;
    }

    if (phase != GamePhase::InProgress) return;

    Player& attacker = players[currentPlayerIndex];
    Player& defender = players[1 - currentPlayerIndex];

    // üî´ –°–æ–≤–µ—Ä—à–∞–µ–º –≤—ã—Å—Ç—Ä–µ–ª –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
    bool hit = defender.board.fireAt(x, y);

    std::cout << attacker.name << " —Å—Ç—Ä–µ–ª—è–µ—Ç –ø–æ (" << x << ", " << y << "): ";
    if (hit)
        std::cout << "üéØ –ü–æ–ø–∞–¥–∞–Ω–∏–µ!\n";
    else
        std::cout << "üí® –ü—Ä–æ–º–∞—Ö.\n";

    // üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–æ–ø–ª–µ–Ω–Ω—ã—Ö –∫–æ—Ä–∞–±–ª–µ–π
    if (defender.board.allShipsSunk()) {
        std::cout << attacker.name << " –ø–æ–±–µ–¥–∏–ª! üèÜ\n";
        phase = GamePhase::Finished;
        return;
    }

    // üîÅ –°–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–∞
    currentPlayerIndex = 1 - currentPlayerIndex;
}

// üóÇÔ∏è –ü–æ–ª—É—á–∏—Ç—å —Ñ–∞–∑—É –∏–≥—Ä—ã
GamePhase Game::getPhase() const {
    return phase;
}

// üìü –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
void Game::displayState() const {
    const Player& current = players[currentPlayerIndex];
    const Player& opponent = players[1 - currentPlayerIndex];

    std::cout << "\nüìç –ò–≥—Ä–æ–∫: " << current.name << "\n";

    std::cout << "üß≠ –í–∞—à–µ –ø–æ–ª–µ:\n";
    current.board.printOwnBoardFramed();

    std::cout << "\nüéØ –ü–æ–ª–µ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:\n";
    opponent.board.printBoardFramed();
}
